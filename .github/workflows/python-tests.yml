name: Python Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Resolve git submodule issue
        run: |
          # Skip submodule initialization since we don't need it for Python tests
          # Just clear any git warnings about missing submodules
          git config --global advice.detachedHead false
          git submodule deinit --all -f || true
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install and build frontend assets
        run: |
          npm install
          npm run build
      
      - name: Build React components
        working-directory: ./static/react-components
        run: |
          npm install
          npm run tailwind
          npm run scss
          npm run build
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install PostgreSQL Client 17
        run: |
          # Add PostgreSQL APT repository for version 17
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y postgresql-client-17
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      
      - name: Set up test environment variables
        run: |
          # Most variables are loaded from .env.test, only override what's needed for CI
          echo "ENVIRONMENT=test" >> $GITHUB_ENV
          echo "PYTHONPATH=." >> $GITHUB_ENV
          # Override database URLs to use GitHub Actions PostgreSQL service
          echo "DATABASE_URL=postgresql://taskmanager_test_user:securepassword123@localhost:5432/taskmanager_test_db" >> $GITHUB_ENV
          echo "ASYNC_DATABASE_URL=postgresql+asyncpg://taskmanager_test_user:securepassword123@localhost:5432/taskmanager_test_db" >> $GITHUB_ENV
          # PostgreSQL connection parameters for psql commands in bootstrap script
          echo "PGHOST=localhost" >> $GITHUB_ENV
          echo "PGPORT=5432" >> $GITHUB_ENV
          echo "PGUSER=postgres" >> $GITHUB_ENV
      
      - name: Set up test database
        run: |
          # Make bootstrap script executable
          chmod +x scripts/bootstrap_blank_test_database.sh
          # Run the database setup script
          ./scripts/bootstrap_blank_test_database.sh
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
          PGPASSWORD: postgres
      
      - name: Run code formatting checks
        run: |
          black --check --diff src/ tests/
          isort --check-only --diff src/ tests/
      
      # - name: Run static type checking
      #   run: |
      #     mypy src/
      
      - name: Run tests
        run: |
          ENVIRONMENT=test pytest --cov=src --cov-report=xml --cov-report=term-missing